openapi: 3.0.0
info:
  title: VEDO
  description: API for VEDO
  version: 1.0.0
paths:
  /authorization:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /registration:
    post:
      summary: Registration user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /jobTitle:
    post:
      summary: Get job titles
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobTitlesRequest'
      responses:
        '200':
          description: job titles successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTitlesResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /branches:
    get:
      summary: Get branches
      responses:
        '200':
          description: branches successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchesListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /branch-settings:
    get:
      summary: Get signers of branch
      parameters:
        - name: branch
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: signers successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchSettingsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /branch-codes:
    get:
      summary: Get codes branch
      responses:
        '200':
          description: branches successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /doc-types:
    get:
      summary: Get doc types
      responses:
        '200':
          description: doc types successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocTypeListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
components:
  schemas:
    LoginRequest:
      type: object
      required:
        - user
        - password
      additionalProperties: false
      properties:
        user:
          type: string
          format: email
        password:
          type: string
          format: password
    LoginResponse:
      type: object
      required:
        - accessToken
      additionalProperties: false
      properties:
        accessToken:
          type: string
    Error:
      type: object
      required:
        - message
        - code
      additionalProperties: false
      properties:
        message:
          type: string
        code:
          type: string
    RegistrationRequest:
      type: object
      required:
        - lastName
        - firstName
        - jobTitle
        - code1C
        - email
        - pinCode
      additionalProperties: false
      properties:
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество (необязательно)
        jobTitle:
          type: string
          description: Должность
        code1C:
          type: string
          description: Код 1С
        email:
          type: string
          format: email
          description: Электронная почта
        pinCode:
          type: string
          description: Пин-код
        codeSm:
          type: string
          description: Код SM (необязательно)
        codeSymphony:
          type: string
          description: Код Symphony (необязательно)
        codeTcd:
          type: string
          description: Код TCD (необязательно)
        codeInfor:
          type: string
          description: Код Infor (необязательно)
        codeDax:
          type: string
          description: Код DAX (необязательно)
    RegistrationResponse:
      type: object
      required:
        - code
        - message
      additionalProperties: false
      properties:
        code:
          type: string
        message:
          type: string
    JobTitlesRequest:
      type: object
      additionalProperties: false
      properties:
        dummy:
          type: string
    JobTitlesResponse:
      type: object
      required:
        - data
      additionalProperties: false
      properties:
        data:
          type: array
          items:
            type: string
    BranchesListResponse:
      type: object
      required:
        - list
      additionalProperties: false
      properties:
        list:
          type: array
          items:
            type: string
    Signer:
      type: object
      required:
        - row
        - signer
        - email
        - docTypes
      properties:
        row:
          type: integer
        signer:
          type: string
        email:
          type: string
        docTypes:
          type: array
          items:
            type: object
            required:
              - doc
              - checked
            properties:
              doc:
                type: string
              checked:
                type: boolean
    Setting:
      type: object
      required:
        - row
        - type
        - code
      properties:
        row:
          type: integer
        type:
          type: string
        code:
          type: string
    BranchSettingsResponse:
      type: object
      required:
        - signers
        - settings
      additionalProperties: false
      properties:
        signers:
          type: array
          items:
            $ref: '#/components/schemas/Signer'
        settings:
          type: array
          items:
            $ref: '#/components/schemas/Setting'
    CodeListResponse:
      type: object
      required:
        - list
      additionalProperties: false
      properties:
        list:
          type: array
          items:
            type: string
    DocTypeListResponse:
      type: object
      required:
        - list
      additionalProperties: false
      properties:
        list:
          type: array
          items:
            type: string
  responses:
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
